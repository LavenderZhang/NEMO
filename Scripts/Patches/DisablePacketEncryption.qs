//############################################################################\\//# Find call to the encryption function and substitute it with XOR EAX, EAX #\\//############################################################################\\function DisablePacketEncryption()
{    //Step 1.1 - Check if any of the Packet Key patches are ON    var patches = GetActivePatches();    for (var i = 0; i < 3; i++)     {        if (patches.indexOf(92 + i) !== -1)            return "Patch Cancelled - One or more of the Packet Key Patches are ON";    }    //Step 1.2 - Check if Packet Key Info is available    if (PK.Error)        return "Failed in Step 2 - " + PK.Error;    //Step 2.1 - Find the Packet Encryption call Prep code to insert.    var code = PK.MovEcx; //MOV ECX, DWORD PTR DS:[refAddr]    if (PK.Type !== 0)        code += " 6A 00"; //PUSH 0    code += " E8"; //CALL CRagConnection::Encryptor    var offset = Exe.FindHex(code);    if (offset === -1)        return "Failed in Step 2";    //Step 3 - Replace CALL with XOR EAX, EAX and JMP to skip the rest till end of CALL    code =        " 33 C0" //XOR EAX, EAX    +   " EB" + Num2Hex(code.byteCount(), 1) //JMP addr    ;    Exe.ReplaceHex(offset, code);    return true;}